// 설치3번, 순서1 Querydsl 사용하기 위한 변수 설정.
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.busanit501'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
}

dependencies {
    // 부트 프로젝트 생성시, 초기에 설치한 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //1 롬복, 테스트 환경에서 동작하기.
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //2 타임리프, 공통 레이아웃 작업하는 동구.
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'

    //3, 순서2 Querydsl 이용해서, 동적 sql 다루고, 빌드 패턴이용하고, 자바의 컴파일러 문법 체크 도움도 받기.
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

    // 4, 순서4 Querydsl 설정.
    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )

    // 5, DTO <-> VO(엔티티클래스) 변환기, 필요.
    implementation 'org.modelmapper:modelmapper:3.2.1'

    // 6 서버 입장에서 입력된 데이터 유효성 검증 도구
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.4.0'

    // 7 Rest 테스트 도구, 스웨거 설치
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // 8 원본 이미지 -> 작은 이미지 변환 도구
    implementation 'net.coobird:thumbnailator:0.4.20'

    // 9 시큐리티 설치.
    implementation 'org.springframework.boot:spring-boot-starter-security:3.4.0'

    // 10 타임리프의 추가 기능, 시큐리티 연동해서, 권한별 화면 표시 하기.
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.3.RELEASE'

    // 11 카카오 로그인 도구
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.4.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", querydslDir]
        }
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.generatedSourceOutputDirectory.set(file(querydslDir))
}

clean {
    delete file(querydslDir)
}
